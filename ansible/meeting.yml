---
- hosts: meeting
  vars:

    port: 80
    domain: commcell
    admin: piotr.gryko@unipart.io

    service:
      name: "commcell_daemon"
      author: "Piotr Gryko"
      root: "/var/www/{{ domain }}"
      file: "service.js"
      daemon: "/usr/bin/forever"
      daemon_opts: "start --uid commcell --killSignal=SIGTERM /usr/bin/nodemon --exitcrash /var/www/{{ domain }}/service.js"
      pidfile: "/var/run/commcell_daemon.pid"

  tasks:

    - name: install packages
      apt: name={{ item }} update_cache=yes state=latest
      with_items:
        - apache2
        - curl
      become: yes

    - name: add nodejs 5.x source
      shell: curl -sL https://deb.nodesource.com/setup_5.x | sudo -E bash -

    - name: install nodejs
      apt: name={{ item }} update_cache=yes state=latest
      with_items:
        - nodejs
        - ghostscript
        - graphicsmagick
      become: yes

    - name: "Install forever (to run Node.js app)."
      npm: name=forever global=yes state=present
      become: yes

    - name: "Install Nodemon (to run Node.js app)."
      npm: name=nodemon global=yes state=present
      become: yes

    # - name: create virtual host file
    #   template: src=virtualhost.conf dest="/etc/apache2/sites-available/{{ domain }}.conf"
    #   become: yes

    - name: create site directory
      file: path="/var/www/{{ domain }}" state=directory owner="{{ ansible_user_id }}" group="{{ ansible_user_id }}"
      become: yes


    # - name: enable proxy_http
    #   command: a2enmod proxy_http
    #   args:
    #     creates: "/etc/apache2/mods-enabled/proxy_http.load"
    #   become: yes
    #   notify:
    #     - restart apache2
    #
    # - name: enable authz_groupfile
    #   command: a2enmod authz_groupfile
    #   args:
    #     creates: "/etc/apache2/mods-enabled/authz_groupfile.load"
    #   become: yes
    #   notify:
    #     - restart apache2
    #
    # - name: enable site
    #   command: a2ensite "{{ domain }}"
    #   args:
    #     creates: "/etc/apache2/sites-enabled/{{ domain }}.conf"
    #   become: yes
    #   notify:
    #     - restart apache2

    - name: synchronize site
      synchronize: src=../build/ dest="/var/www/{{ domain }}/" delete=yes
      become: no
      notify:
        - restart node

    - name: set upload directory permissions
      file: dest=/var/www/{{ domain }}/static/uploads mode=0777 recurse=yes
      become: no


    - name: "Check list of Node.js apps running."
      command: forever list
      register: forever_list
      changed_when: false


    - name: Add CommCell init.d daemon script
      action: template src=nodejs-service.conf dest=/etc/init.d/{{ service.name }} mode=0751
      become: yes

    - name: Ensure my daemon {{ service.name }} is started
      action: service name={{ service.name }} state=started
      become: yes

  handlers:

    - name: restart apache2
      service: name=apache2 state=restarted
      become: yes

    - name: restart node
      service: name={{ service.name }} state=restarted
      become: yes
